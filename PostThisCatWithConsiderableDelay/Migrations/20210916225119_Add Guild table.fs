// <auto-generated />
namespace PostThisCatWithConsiderableDelay.Migrations

open System
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion
open PostThisCatWithConsiderableDelay.Models

[<DbContext(typeof<CatContext.CatContext>)>]
[<Migration("20210916225119_Add Guild table")>]
type AddGuildtable() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.AlterColumn<UInt64>(
            name = "UserId"
            ,table = "Posts"
            ,``type`` = "INTEGER"
            ,nullable = true
            ,oldClrType = typedefof<UInt64>
            ,oldType = "INTEGER"
            ,oldNullable = false
            ) |> ignore

        migrationBuilder.AlterColumn<UInt64>(
            name = "UserGuildId"
            ,table = "Posts"
            ,``type`` = "INTEGER"
            ,nullable = true
            ,oldClrType = typedefof<UInt64>
            ,oldType = "INTEGER"
            ,oldNullable = false
            ) |> ignore

        migrationBuilder.CreateTable(
            name = "Guilds"
            ,columns = (fun table -> 
            {|
                GuildId =
                    table.Column<UInt64>(
                        nullable = false
                        ,``type`` = "INTEGER"
                    ).Annotation("Sqlite:Autoincrement", true)
                CatChannel =
                    table.Column<UInt64>(
                        nullable = false
                        ,``type`` = "INTEGER"
                    )
            |})
            ,constraints =
                (fun table -> 
                    table.PrimaryKey("PK_Guilds", (fun x -> (x.GuildId) :> obj)) |> ignore
                ) 
        ) |> ignore

        migrationBuilder.CreateIndex(
            name = "IX_Users_GuildId"
            ,table = "Users"
            ,column = "GuildId"
            ) |> ignore

        migrationBuilder.AddForeignKey(
            name = "FK_Users_Guilds_GuildId"
            ,table = "Users"
            ,column = "GuildId"
            ,principalTable = "Guilds"
            ,principalColumn = "GuildId"
            ,onDelete = ReferentialAction.Cascade
        ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropForeignKey(
            name = "FK_Users_Guilds_GuildId"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.DropTable(
            name = "Guilds"
            ) |> ignore

        migrationBuilder.DropIndex(
            name = "IX_Users_GuildId"
            ,table = "Users"
            ) |> ignore

        migrationBuilder.AlterColumn<UInt64>(
            name = "UserId"
            ,table = "Posts"
            ,``type`` = "INTEGER"
            ,nullable = false
            ,defaultValue = 0uL
            ,oldClrType = typedefof<UInt64>
            ,oldType = "INTEGER"
            ,oldNullable = true
            ) |> ignore

        migrationBuilder.AlterColumn<UInt64>(
            name = "UserGuildId"
            ,table = "Posts"
            ,``type`` = "INTEGER"
            ,nullable = false
            ,defaultValue = 0uL
            ,oldClrType = typedefof<UInt64>
            ,oldType = "INTEGER"
            ,oldNullable = true
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder
            .HasAnnotation("ProductVersion", "5.0.10")
            |> ignore

        modelBuilder.Entity("PostThisCatWithConsiderableDelay.Models.User+Guild", (fun b ->

            b.Property<UInt64>("GuildId")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("INTEGER") |> ignore
            b.Property<UInt64>("CatChannel")
                .IsRequired(true)
                .HasColumnType("INTEGER") |> ignore

            b.HasKey("GuildId") |> ignore

            b.ToTable("Guilds") |> ignore

        )) |> ignore

        modelBuilder.Entity("PostThisCatWithConsiderableDelay.Models.User+Post", (fun b ->

            b.Property<Guid>("PostId")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT") |> ignore
            b.Property<DateTime>("Timestamp")
                .IsRequired(true)
                .HasColumnType("TEXT") |> ignore
            b.Property<Nullable<UInt64>>("UserGuildId")
                .IsRequired(true)
                .HasColumnType("INTEGER") |> ignore
            b.Property<Nullable<UInt64>>("UserId")
                .IsRequired(true)
                .HasColumnType("INTEGER") |> ignore

            b.HasKey("PostId") |> ignore


            b.HasIndex("UserId", "UserGuildId") |> ignore

            b.ToTable("Posts") |> ignore

        )) |> ignore

        modelBuilder.Entity("PostThisCatWithConsiderableDelay.Models.User+User", (fun b ->

            b.Property<UInt64>("UserId")
                .IsRequired(true)
                .HasColumnType("INTEGER") |> ignore
            b.Property<UInt64>("GuildId")
                .IsRequired(true)
                .HasColumnType("INTEGER") |> ignore
            b.Property<Int64>("Points")
                .IsRequired(true)
                .HasColumnType("INTEGER") |> ignore

            b.HasKey("UserId", "GuildId") |> ignore


            b.HasIndex("GuildId") |> ignore

            b.ToTable("Users") |> ignore

        )) |> ignore

        modelBuilder.Entity("PostThisCatWithConsiderableDelay.Models.User+Post", (fun b ->
            b.HasOne("PostThisCatWithConsiderableDelay.Models.User+User","User")
                .WithMany("Posts")
                .HasForeignKey("UserId", "UserGuildId") |> ignore
        )) |> ignore

        modelBuilder.Entity("PostThisCatWithConsiderableDelay.Models.User+User", (fun b ->
            b.HasOne("PostThisCatWithConsiderableDelay.Models.User+Guild","Guild")
                .WithMany("Users")
                .HasForeignKey("GuildId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired() |> ignore
        )) |> ignore

